{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\react-express-connection\\\\ecommerce\\\\src\\\\auth\\\\EmailVerify.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { API } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmailVerify = () => {\n  _s();\n  const params = useParams();\n  const [values, setValues] = useState({\n    error: '',\n    success: false\n  });\n  const {\n    error,\n    success\n  } = values;\n\n  //verify process \n  useEffect(() => {\n    const token = params.token;\n    fetch(`${API}/confirmation/${token}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        setValues({\n          ...values,\n          error: data.error\n        });\n      } else {\n        setValues({\n          ...values,\n          error: '',\n          success: true\n        });\n      }\n    }).catch(err => console.log(err));\n  }, [params.token]);\n\n  //to show error msg \n  const showError = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? '' : 'none'\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n\n  // to show success msg\n  const showSuccess = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-success\",\n    style: {\n      display: success ? '' : 'none'\n    },\n    children: \"Your account has been verified,login to continue\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showError(), showSuccess()]\n  }, void 0, true);\n};\n_s(EmailVerify, \"TbP0RaaK7lFuj89ZwDaClhxL7ZE=\", false, function () {\n  return [useParams];\n});\n_c = EmailVerify;\nexport default EmailVerify;\nvar _c;\n$RefreshReg$(_c, \"EmailVerify\");","map":{"version":3,"names":["React","useState","useEffect","useParams","API","jsxDEV","_jsxDEV","Fragment","_Fragment","EmailVerify","_s","params","values","setValues","error","success","token","fetch","method","headers","Accept","then","res","json","data","catch","err","console","log","showError","className","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","showSuccess","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/react-express-connection/ecommerce/src/auth/EmailVerify.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { API } from '../config'\r\n\r\nconst EmailVerify = () => {\r\n    const params=useParams()\r\n    const[values,setValues]=useState({\r\n        error:'',\r\n        success:false\r\n    })\r\n    const{error,success}=values\r\n\r\n    //verify process \r\n    useEffect(()=>{\r\n        const token= params.token\r\n        fetch(`${API}/confirmation/${token}`,{\r\n            method:\"POST\",\r\n            headers:{\r\n                Accept:\"application/json\",\r\n                \"Content-Type\":\"application/json\"\r\n            }\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            if(data.error){\r\n                setValues({...values,error:data.error})\r\n            }\r\n            else{\r\n                setValues({...values,error:'',success:true})\r\n            }\r\n        })\r\n        .catch(err=>console.log(err))\r\n    },[params.token])\r\n\r\n    //to show error msg \r\n    const showError=()=>(\r\n        <div className='alert alert-danger' style={{display:error ? '':'none'}}>\r\n            {error}\r\n        </div>\r\n    )\r\n\r\n    // to show success msg\r\n    const showSuccess=()=>(\r\n        <div className='alert alert-success' style={{display:success ? '':'none'}}>\r\n           Your account has been verified,login to continue\r\n        </div>\r\n    )\r\n  return (\r\n    <>\r\n    {showError()}\r\n    {showSuccess()}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EmailVerify"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC9C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,GAAG,QAAQ,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,MAAM,GAACR,SAAS,EAAE;EACxB,MAAK,CAACS,MAAM,EAACC,SAAS,CAAC,GAACZ,QAAQ,CAAC;IAC7Ba,KAAK,EAAC,EAAE;IACRC,OAAO,EAAC;EACZ,CAAC,CAAC;EACF,MAAK;IAACD,KAAK;IAACC;EAAO,CAAC,GAACH,MAAM;;EAE3B;EACAV,SAAS,CAAC,MAAI;IACV,MAAMc,KAAK,GAAEL,MAAM,CAACK,KAAK;IACzBC,KAAK,CAAE,GAAEb,GAAI,iBAAgBY,KAAM,EAAC,EAAC;MACjCE,MAAM,EAAC,MAAM;MACbC,OAAO,EAAC;QACJC,MAAM,EAAC,kBAAkB;QACzB,cAAc,EAAC;MACnB;IACJ,CAAC,CAAC,CACDC,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,EAAE,CAAC,CACrBF,IAAI,CAACG,IAAI,IAAE;MACR,IAAGA,IAAI,CAACV,KAAK,EAAC;QACVD,SAAS,CAAC;UAAC,GAAGD,MAAM;UAACE,KAAK,EAACU,IAAI,CAACV;QAAK,CAAC,CAAC;MAC3C,CAAC,MACG;QACAD,SAAS,CAAC;UAAC,GAAGD,MAAM;UAACE,KAAK,EAAC,EAAE;UAACC,OAAO,EAAC;QAAI,CAAC,CAAC;MAChD;IACJ,CAAC,CAAC,CACDU,KAAK,CAACC,GAAG,IAAEC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACjC,CAAC,EAAC,CAACf,MAAM,CAACK,KAAK,CAAC,CAAC;;EAEjB;EACA,MAAMa,SAAS,GAACA,CAAA,kBACZvB,OAAA;IAAKwB,SAAS,EAAC,oBAAoB;IAACC,KAAK,EAAE;MAACC,OAAO,EAAClB,KAAK,GAAG,EAAE,GAAC;IAAM,CAAE;IAAAmB,QAAA,EAClEnB;EAAK;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEb;;EAED;EACA,MAAMC,WAAW,GAACA,CAAA,kBACdhC,OAAA;IAAKwB,SAAS,EAAC,qBAAqB;IAACC,KAAK,EAAE;MAACC,OAAO,EAACjB,OAAO,GAAG,EAAE,GAAC;IAAM,CAAE;IAAAkB,QAAA,EAAC;EAE3E;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;EACH,oBACE/B,OAAA,CAAAE,SAAA;IAAAyB,QAAA,GACCJ,SAAS,EAAE,EACXS,WAAW,EAAE;EAAA,gBACX;AAEP,CAAC;AAAA5B,EAAA,CAjDKD,WAAW;EAAA,QACAN,SAAS;AAAA;AAAAoC,EAAA,GADpB9B,WAAW;AAmDjB,eAAeA,WAAW;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}